AWSTemplateFormatVersion: 2010-09-09
Description: Auto deployment of Logz.io api status.
Parameters:
  LambdaFunctionName:
    Type: String
    Description: >-
      The name of the Lambda function.
    Default: logzio-api-status
    MinLength: 1
    MaxLength: 64
  ApiURL:
    Type: String
    Description: >-
      Your api url to collect status from.
    MinLength: 1
  Method:
    Type: String
    Description: >-
      Your api http request method.
    Default: 'GET'
    AllowedValues:
      - 'GET'
      - 'POST'
  Headers:
    Type: String
    Description: >-
      Your api headers separated by comma and each header's key and value are separated by colon (optional).
  Body:
    Type: String
    Description: >-
      Your api http request body (optional).
  BearerToken:
    Type: String
    Description: >-
      Your api bearer token (optional).
  Username:
    Type: String
    Description: >-
      Your api username (optional).
  Password:
    Type: String
    Description: >-
      Your api password (optional).
  ApiResponseTimeout:
    Type: Number
    Description: >-
      Your api response timeout in seconds.
    Default: 5
    MinValue: 1
  ExpectedStatusCode:
    Type: Number
    Description: >-
      The expected http response status code your api should return.
    Default: 200
    MinValue: 100
    MaxValue: 599
  ExpectedBody:
    Type: String
    Description: >-
      The expected http response body your api should return (leave empty if your api http response body is empty).
  LogzioMetricsListener:
    Type: String
    Description: >-
      The Logz.io metrics listener URL for your region. (For more details, see the regions page:
      https://docs.logz.io/user-guide/accounts/account-region.html)
    Default: 'https://listener.logz.io:8053'
    AllowedValues:
      - 'https://listener.logz.io:8053'
      - 'https://listener-au.logz.io:8053'
      - 'https://listener-ca.logz.io:8053'
      - 'https://listener-eu.logz.io:8053'
      - 'https://listener-nl.logz.io:8053'
      - 'https://listener-uk.logz.io:8053'
      - 'https://listener-wa.logz.io:8053'
  LogzioMetricsToken:
    Type: String
    Description: >-
      Your Logz.io metrics token (Can be retrieved from the Manage Token page).
    MinLength: 1
  CloudWatchEventScheduleExpression:
    Type: String
    Description: >-
      The scheduling expression that determines when and how often the Lambda
      function runs.
    Default: rate(30 minutes)
    MinLength: 1
    MaxLength: 256
  LogzioLogsListener:
    Type: String
    Description: >-
      The Logz.io logs listener URL for your region. (For more details, see the regions page:
      https://docs.logz.io/user-guide/accounts/account-region.html)
    Default: 'https://listener.logz.io:8071'
    AllowedValues:
      - 'https://listener.logz.io:8071'
      - 'https://listener-au.logz.io:8071'
      - 'https://listener-ca.logz.io:8071'
      - 'https://listener-eu.logz.io:8071'
      - 'https://listener-nl.logz.io:8071'
      - 'https://listener-uk.logz.io:8071'
      - 'https://listener-wa.logz.io:8071'
  LogzioLogsToken:
    Type: String
    Description: >-
      Your Logz.io logs token (Can be retrieved from the Manage Token page).
    MinLength: 1
  LogsExtensionLogLevel:
    Type: String
    Description: >-
      Log level of the extension.
    Default: info
    AllowedValues:
      - debug
      - info
      - warn
      - error
      - fatal
      - panic
  EnableExtensionInnerLogs:
    Type: String
    Description: >-
      Set to true if you wish the extension inner logs will be shipped to your Logz.io account.
    Default: false
    AllowedValues:
      - false
      - true
  EnablePlatformLogs:
    Type: String
    Description: >-
      The platform log captures runtime or execution environment errors.
      Set to true if you wish the platform logs will be shipped to your Logz.io account.
    Default: false
    AllowedValues:
      - false
      - true
  GrokPatters:
    Type: String
    Description: >-
      Must be set with LogsFormat. Use this if you want to parse your logs into fields.
      A minified JSON list that contains the field name and the regex that will match the field. (optional).
  LogsFormat:
    Type: String
    Description: >-
      Must be set with GrokPatters. Use this if you want to parse your logs into fields.
      The format in which the logs will appear, in accordance to grok conventions. (optional).
  LogsCustomFields:
    Type: String
    Description: >-
      Include additional fields with every message sent,
      formatted as fieldName1=fieldValue1;fieldName2=fieldValue2 (NO SPACES).
      A custom key that clashes with a key from the log itself will be ignored. (optional).
Resources:
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: logzio-aws-integrations-us-east-1
        S3Key: api-status-auto-deployment/function.zip
      FunctionName: !Ref LambdaFunctionName
      Description: >-
        Lambda function for collecting API status metrics and sending
        them to Logz.io.
      Handler: bootstrap
      Role: !GetAtt IAMRole.Arn
      Runtime: provided.al2
      Timeout: 300
      MemorySize: 1024
      ReservedConcurrentExecutions: 1
      Layers:
        - arn:aws:lambda:us-east-1:486140753397:layer:LogzioLambdaExtensionLogs:4
      Environment:
        Variables:
          API_URL: !Ref ApiURL
          METHOD: !Ref Method
          HEADERS: !Ref Headers
          BODY: !Ref Body
          API_RESPONSE_TIMEOUT: !Ref ApiResponseTimeout
          BEARER_TOKEN: !Ref BearerToken
          USERNAME: !Ref Username
          PASSWORD: !Ref Password
          EXPECTED_STATUS_CODE: !Ref ExpectedStatusCode
          EXPECTED_BODY: !Ref ExpectedBody
          LOGZIO_METRICS_LISTENER: !Ref LogzioMetricsListener
          LOGZIO_METRICS_TOKEN: !Ref LogzioMetricsToken
          LOGZIO_LISTENER: !Ref LogzioMetricsListener
          LOGZIO_LOGS_TOKEN: !Ref LogzioLogsToken
          LOGS_EXT_LOG_LEVEL: !Ref LogsExtensionLogLevel
          ENABLE_EXTENSION_LOGS: !Ref EnableExtensionInnerLogs
          ENABLE_PLATFORM_LOGS: !Ref EnablePlatformLogs
          GROK_PATTERNS: !Ref GrokPatters
          LOGS_FORMAT: !Ref LogsFormat
          CUSTOM_FIELDS: !Ref LogsCustomFields
  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref LambdaFunctionName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Ref LambdaFunctionName
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  EventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name: !Ref LambdaFunctionName
      ScheduleExpression: !Ref CloudWatchEventScheduleExpression
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: !Ref LambdaFunctionName
  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref LambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventRule.Arn